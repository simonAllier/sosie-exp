{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":35,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":311,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":3,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":439,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":156,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":351,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":452,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":366,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":371,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":328,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":399,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":280,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":420,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":57,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":298,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":128,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":379,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":433,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":39,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":322,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":150,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":400,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":78,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":194,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":173,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":256,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":170,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":425,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":6,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":230,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":178,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":87,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":137,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":435,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":278,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":285,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":309,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":53,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":120,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":323,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":292,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":334,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSimpleSerialization":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":244,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":36,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":33,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":222,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":98,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":179,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":235,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":166,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":369,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":432,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":135,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":315,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":174,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":300,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":143,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":348,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":349,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":385,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":342,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":450,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":436,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":7,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":320,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":321,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":319,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":295,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":66,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":192,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":165,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":48,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":126,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":69,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":149,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":317,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":316,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":40,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":318,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":426,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":445,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":378,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":10,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":449,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":412,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":402,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":427,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":241,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":229,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":360,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":187,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":257,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":234,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":344,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":345,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":330,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":409,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":93,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":343,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":206,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":287,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":139,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":423,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":216,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":109,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":41,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":227,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":34,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":197,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":422,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":14,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":370,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEmptyMapCompatibility":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":387,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":176,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":305,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":29,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":350,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":296,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":248,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":249,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":262,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":312,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":264,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":336,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":255,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":413,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":341,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":340,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":198,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":240,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":28,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":260,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":286,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":398,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":252,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":284,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":438,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":202,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":226,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":200,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":195,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":290,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":279,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":153,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":415,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":228,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeCheckComparator":356,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":368,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":401,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":75,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEmptyMapCompatibility":352,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":96,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":406,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":175,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":16,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":442,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":168,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":373,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":147,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":77,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":172,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":167,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":299,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":224,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":38,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":8,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":419,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":89,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":437,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":384,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":97,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":417,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":301,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":210,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSimpleSerialization":355,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":274,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":394,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":103,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":209,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":117,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":365,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":404,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":441,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":83,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":430,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":396,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":408,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":414,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":310,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":106,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":307,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":105,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":112,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":55,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":304,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":338,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":303,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":251,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":374,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":390,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testCollections364":357,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":56,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":263,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":446,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":131,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":157,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":42,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":79,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":221,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":136,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":332,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":428,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":444,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":403,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":354,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":443,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":363,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":448,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":95,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":11,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":236,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":25,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":364,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":418,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":297,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":92,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":253,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":124},"transformations":[{"failures":[],"tindex":"8e9924b7-21ef-11e6-9b2a-bf196f90e64c","series":0,"name":"replace","transplant":{"toString":"if (!(setPreviousObject())) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtIfImpl","sourcecode":"if (!(setPreviousObject())) {\n    return false;\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.collections4.CollectionUtils:883","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"8e994bc8-21ef-11e6-9b2a-835e4827d4ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"(mut.value)--","position":"org.apache.commons.collections4.bag.AbstractMapBag:224","type":"CtUnaryOperatorImpl","sourcecode":"(mut.int)--"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"8e994bc9-21ef-11e6-9b2a-0fa7b64a8c8e","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"node.setParent(rightChild, dataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"node.setParent(rightChild, dataElement)"},"status":-1},{"failures":[],"tindex":"8e994bca-21ef-11e6-9b2a-5f891d260fb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"node = node.right","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1170","type":"CtAssignmentImpl","sourcecode":"node = node.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[120,121,122,123,124,125,126,127,128,129],"tindex":"8e9972db-21ef-11e6-9b2a-61c389823a37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"broadcastNodeInserted(nodeToInsert)","position":"org.apache.commons.collections4.list.CursorableLinkedList:235","type":"CtInvocationImpl","sourcecode":"broadcastNodeInserted(nodeToInsert)"},"status":-1},{"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"8e9972dc-21ef-11e6-9b2a-31093705ad1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"inverseBidiMap = createBidiMap(reverseMap, normalMap, org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:236","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.BidiMap<V, K> = createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this)"},"status":-1},{"failures":[],"tindex":"8e9972dd-21ef-11e6-9b2a-7972c21d0832","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"next = previous","position":"org.apache.commons.collections4.map.AbstractLinkedMap:570","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = previous"},"status":-1},{"failures":[246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"8e9972de-21ef-11e6-9b2a-95837d443c54","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.collections4.map.AbstractReferenceMap.this.keyType = keyType","position":"org.apache.commons.collections4.map.AbstractReferenceMap:168","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap.this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength = keyType"},"variableMap":{"keyType":"valueType"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.collections4.map.AbstractReferenceMap.this.valueType = valueType","position":"org.apache.commons.collections4.map.AbstractReferenceMap:169","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap.this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength = valueType"},"status":-1},{"failures":[],"tindex":"8e9999ef-21ef-11e6-9b2a-a5848da539e7","series":0,"name":"replace","transplant":{"toString":"final E object = iterator.next()","position":"org.apache.commons.collections4.iterators.FilterIterator:175","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<? extends E>.next()"},"variableMap":{"iterator":"iter"},"type":"adrStmt","transplantationPoint":{"toString":"final E temp = iter.next()","position":"org.apache.commons.collections4.MapUtils:1742","type":"CtLocalVariableImpl","sourcecode":"final E E = iter.next()"},"status":-3},{"failures":[],"tindex":"8e9999f0-21ef-11e6-9b2a-339c58138383","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((inverse) == null) {\n    inverse = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(decorated().inverseBidiMap());\n    inverse.inverse = org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.this;\n} ","position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.this;\n} "},"status":-2},{"failures":[],"tindex":"8e9999f1-21ef-11e6-9b2a-0de2a884c7b7","series":0,"name":"add","transplant":{"toString":"getIterator().remove()","position":"org.apache.commons.collections4.set.ListOrderedSet:391","type":"CtInvocationImpl","sourcecode":"getIterator().remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (map == null) {\n    throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n} ","position":"org.apache.commons.collections4.set.MapBackedSet:75","type":"CtIfImpl","sourcecode":"if (map == null) {\n    throw new java.lang.IllegalArgumentException(\"The map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"8e9999f2-21ef-11e6-9b2a-e9c0ec08cdea","series":0,"name":"replace","transplant":{"toString":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> leftMax = left.max()","position":"org.apache.commons.collections4.list.TreeList:650","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.max()"},"variableMap":{"left":"otherTree"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.collections4.list.TreeList.AVLNode<E> s = otherTree","position":"org.apache.commons.collections4.list.TreeList:832","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = otherTree"},"status":-3},{"failures":[],"tindex":"8e99c003-21ef-11e6-9b2a-3d9218b428c6","series":0,"name":"replace","transplant":{"toString":"this.nullsAreHigh = nullsAreHigh","position":"org.apache.commons.collections4.comparators.NullComparator:114","type":"CtAssignmentImpl","sourcecode":"this.boolean = nullsAreHigh"},"variableMap":{"nullsAreHigh":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"toString":"removeLRUEntry = true","position":"org.apache.commons.collections4.map.LRUMap:252","type":"CtAssignmentImpl","sourcecode":"removeLRUEntry = true"},"status":-2},{"failures":[],"tindex":"8e99c004-21ef-11e6-9b2a-8dba90b25258","series":0,"name":"replace","transplant":{"toString":"for (final C c : decorated()) {\n    addToIndex(c);\n}","position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : decorated()) {\n    addToIndex(c);\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.collections4.map.CompositeMap.this.composite[i].clear()","position":"org.apache.commons.collections4.map.CompositeMap:178","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap.this.java.util.Map<K, V>[][i].clear()"},"status":-2},{"failures":[],"tindex":"8e99c005-21ef-11e6-9b2a-4d75928aaa91","series":0,"name":"add","transplant":{"toString":"return getQueue().remove()","position":"org.apache.commons.collections4.queue.TransformedQueue:131","type":"CtReturnImpl","sourcecode":"return getQueue().remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return nextObject","position":"org.apache.commons.collections4.iterators.FilterIterator:104","type":"CtReturnImpl","sourcecode":"return E"},"status":-2},{"failures":[],"tindex":"8e99c006-21ef-11e6-9b2a-6937c029bdd9","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\")","position":"org.apache.commons.collections4.functors.FunctorUtils:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:718","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")"},"status":-1},{"failures":[],"tindex":"8e99c007-21ef-11e6-9b2a-1f5dd7d0fb47","series":0,"name":"add","transplant":{"toString":"decrementSize()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"decrementSize()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"while (enumeration.hasMoreElements()) {\n    changed |= collection.add(enumeration.nextElement());\n}","position":"org.apache.commons.collections4.CollectionUtils:1139","type":"CtWhileImpl","sourcecode":"while (enumeration.hasMoreElements()) {\n    changed |= collection.add(enumeration.nextElement());\n}"},"status":-2},{"failures":[],"tindex":"8e99e718-21ef-11e6-9b2a-9bc39d274fc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"previousNode = null","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1633","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"status":0},{"failures":[132,135,138,146,336,337,338,339,161,164,167,175,340,341,342,343,204,344,345,346,347,224,348,349,350,351],"tindex":"8ea3d229-21ef-11e6-9b2a-c5ccfb947bd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"parent.normalMap.remove(key)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:594","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(key)"},"status":-1},{"failures":[],"tindex":"8ea3d22a-21ef-11e6-9b2a-a74becf63423","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.toKey = toKey","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1877","type":"CtAssignmentImpl","sourcecode":"this.K = toKey"},"status":-2},{"failures":[352,353,354,355,356,357,358,359,360,361],"tindex":"8eaaaffb-21ef-11e6-9b2a-0f4ec7841bb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"in.defaultReadObject()","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:390","type":"CtInvocationImpl","sourcecode":"in.defaultReadObject()"},"status":-1},{"failures":[],"tindex":"8eaaaffc-21ef-11e6-9b2a-2388b64d1137","series":0,"name":"replace","transplant":{"toString":"if ((nextIndex) != (currentIndex)) {\n    (nextIndex)--;\n} ","position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"length","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"toString":"if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.length) != (args.length)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} ","position":"org.apache.commons.collections4.functors.InstantiateFactory:61","type":"CtIfImpl","sourcecode":"if ((((paramTypes == null) && (args != null)) || ((paramTypes != null) && (args == null))) || (((paramTypes != null) && (args != null)) && ((paramTypes.int) != (args.int)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} "},"status":-2},{"failures":[],"tindex":"8eaad70d-21ef-11e6-9b2a-e331f7ebbc97","series":0,"name":"add","transplant":{"toString":"return getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl","sourcecode":"return getMap().firstKey()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl","sourcecode":"return decorated().last()"},"status":-2},{"failures":[],"tindex":"8eaad70e-21ef-11e6-9b2a-c724f6de576b","series":0,"name":"replace","transplant":{"toString":"V value = null","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final V previous = org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this.value","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:181","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.this.V"},"status":-2},{"failures":[],"tindex":"8eaad70f-21ef-11e6-9b2a-ed5c544eb872","series":0,"name":"replace","transplant":{"toString":"this.decorated = decorated","position":"org.apache.commons.collections4.comparators.TransformingComparator:68","type":"CtAssignmentImpl","sourcecode":"this.java.util.Comparator<O> = decorated"},"variableMap":{"decorated":"comparator"},"type":"adrStmt","transplantationPoint":{"toString":"comparator = org.apache.commons.collections4.ComparatorUtils.NATURAL_COMPARATOR","position":"org.apache.commons.collections4.ComparatorUtils:198","type":"CtAssignmentImpl","sourcecode":"comparator = org.apache.commons.collections4.ComparatorUtils.org.apache.commons.collections4.ComparatorUtils.java.util.Comparator"},"status":-2},{"failures":[],"tindex":"8eaad710-21ef-11e6-9b2a-cbc0bfdf9db3","series":0,"name":"replace","transplant":{"toString":"if (!(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:841","type":"CtIfImpl","sourcecode":"if (!(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"grow()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:529","type":"CtInvocationImpl","sourcecode":"grow()"},"status":-2},{"failures":[],"tindex":"8eab4c41-21ef-11e6-9b2a-f71d2c6fee95","series":0,"name":"add","transplant":{"toString":"final int size = decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl","sourcecode":"final int int = decorated().size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int hashCode = 1","position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[362],"tindex":"8eab4c42-21ef-11e6-9b2a-bf5d5dc144b4","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"equator may not be null\")","position":"org.apache.commons.collections4.CollectionUtils:544","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"equator may not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.NullPointerException(\"Key must not be null\")","position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key must not be null\")"},"status":-1},{"failures":[363,364,365,366,367,368,369],"tindex":"8eab4c43-21ef-11e6-9b2a-6b70c2fef939","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\")","position":"org.apache.commons.collections4.functors.FunctorUtils:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\")"},"status":-1},{"failures":[],"tindex":"8eab7354-21ef-11e6-9b2a-8d7b8934bcde","series":0,"name":"replace","transplant":{"toString":"parent.remove(getKey())","position":"org.apache.commons.collections4.map.Flat3Map:649","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.remove(getKey())"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"toString":"map.put(keyTransformer.transform(temp), valueTransformer.transform(temp))","position":"org.apache.commons.collections4.MapUtils:1704","type":"CtInvocationImpl","sourcecode":"map.put(keyTransformer.transform(temp), valueTransformer.transform(temp))"},"status":-3},{"failures":[370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399],"tindex":"8eab7355-21ef-11e6-9b2a-7f8717739b99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((path == (root)) || (!(isBitSet(entry.key, path.bitIndex, lengthInBits)))) {\n    path.left = entry;\n} else {\n    path.right = entry;\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((path == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!(isBitSet(entry.K, path.int, lengthInBits)))) {\n    path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n} else {\n    path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry;\n}"},"status":-1},{"failures":[],"tindex":"8eab7356-21ef-11e6-9b2a-ff59714cb86e","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.collections4.functors.StringValueTransformer.<T>stringValueTransformer()","position":"org.apache.commons.collections4.TransformerUtils:432","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.<T>stringValueTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>(paramTypes , args)","position":"org.apache.commons.collections4.functors.InstantiateTransformer:76","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>(paramTypes , args)"},"status":-2},{"failures":[],"tindex":"8eab7357-21ef-11e6-9b2a-33a1d0b325b9","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.collections4.keyvalue.MultiKey.this","position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.keyvalue.MultiKey.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return it.nextElement()","position":"org.apache.commons.collections4.CollectionUtils:1279","type":"CtReturnImpl","sourcecode":"return it.nextElement()"},"status":-2},{"failures":[],"tindex":"8eab9a68-21ef-11e6-9b2a-8db41e325710","series":0,"name":"replace","transplant":{"toString":"while (entry != null) {\n    if (((entry.hashCode) == hashCode) && (isEqualKey(entry, key1, key2))) {\n        final V oldValue = entry.getValue();\n        decorated().removeMapping(entry, index, previous);\n        return oldValue;\n    } \n    previous = entry;\n    entry = entry.next;\n}","position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (entry != null) {\n    if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2))) {\n        final V V = entry.getValue();\n        decorated().removeMapping(entry, index, previous);\n        return oldValue;\n    } \n    previous = entry;\n    entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"toString":"if (((entry.hashCode) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n    final V oldValue = entry.getValue();\n    decorated().removeMapping(entry, index, previous);\n    return oldValue;\n} ","position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((entry.int) == hashCode) && (isEqualKey(entry, key1, key2, key3, key4))) {\n    final V V = entry.getValue();\n    decorated().removeMapping(entry, index, previous);\n    return oldValue;\n} "},"status":-3},{"failures":[],"tindex":"8eab9a69-21ef-11e6-9b2a-5f6f09768425","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.collections4.keyvalue.MultiKey.this","position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.keyvalue.MultiKey.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.collections4.functors.DefaultEquator.INSTANCE","position":"org.apache.commons.collections4.functors.DefaultEquator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.DefaultEquator.org.apache.commons.collections4.functors.DefaultEquator.org.apache.commons.collections4.functors.DefaultEquator"},"status":-2},{"failures":[],"tindex":"8eab9a6a-21ef-11e6-9b2a-17daffb36d73","series":0,"name":"replace","transplant":{"toString":"iParamTypes = paramTypes != null ? paramTypes.clone() : null","position":"org.apache.commons.collections4.functors.InstantiateTransformer:99","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?>[] = paramTypes != null ? paramTypes.clone() : null"},"variableMap":{"paramTypes":"iParamTypes","iParamTypes":"iParamTypes"},"type":"adrStmt","transplantationPoint":{"toString":"iParamTypes = null","position":"org.apache.commons.collections4.functors.InstantiateFactory:82","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?>[] = null"},"status":-2},{"failures":[],"tindex":"8eabc17b-21ef-11e6-9b2a-d19715a6b916","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"checkLocked()","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:202","type":"CtInvocationImpl","sourcecode":"checkLocked()"},"status":-2},{"failures":[],"tindex":"8eae598c-21ef-11e6-9b2a-c7c0d9a2844c","series":0,"name":"replace","transplant":{"toString":"for (final java.util.Iterator<K> it = keySet().iterator() ; it.hasNext() ; ) {\n    it.next();\n    it.remove();\n}","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:248","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<K> java.util.Iterator<K> = keySet().iterator() ; it.hasNext() ; ) {\n    it.next();\n    it.remove();\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"parent.removeNode(getLastNodeReturned())","position":"org.apache.commons.collections4.list.AbstractLinkedList:865","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(getLastNodeReturned())"},"status":-2},{"failures":[],"tindex":"8eae598d-21ef-11e6-9b2a-954551dbb1e9","series":0,"name":"replace","transplant":{"toString":"entry = entry.next","position":"org.apache.commons.collections4.map.MultiKeyMap:142","type":"CtAssignmentImpl","sourcecode":"entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"next":"previous","entry":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"previous = entry","position":"org.apache.commons.collections4.map.MultiKeyMap:486","type":"CtAssignmentImpl","sourcecode":"previous = entry"},"status":-3},{"failures":[400],"tindex":"8eae598e-21ef-11e6-9b2a-a50c12f91a5f","series":0,"name":"replace","transplant":{"toString":"first = false","position":"org.apache.commons.collections4.map.ListOrderedMap:369","type":"CtAssignmentImpl","sourcecode":"first = false"},"variableMap":{"first":"changed"},"type":"adrStmt","transplantationPoint":{"toString":"changed |= collection.add(element)","position":"org.apache.commons.collections4.CollectionUtils:1157","type":"CtOperatorAssignmentImpl","sourcecode":"changed |= collection.add(element)"},"status":-1},{"failures":[],"tindex":"8eae598f-21ef-11e6-9b2a-332907f9ed6f","series":0,"name":"add","transplant":{"toString":"return (java.lang.reflect.Array.getLength(object)) == 0","position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(object)) == 0"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"toString":"return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()))","position":"org.apache.commons.collections4.map.Flat3Map:867","type":"CtReturnImpl","sourcecode":"return (key == null ? (other.getKey()) == null : key.equals(other.getKey())) && (value == null ? (other.getValue()) == null : value.equals(other.getValue()))"},"status":-2},{"failures":[],"tindex":"8eae80a0-21ef-11e6-9b2a-f336efcc27d7","series":0,"name":"replace","transplant":{"toString":"if ((nodeCount) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"bitIndex"},"type":"adrStmt","transplantationPoint":{"toString":"if ((child.bitIndex) > (parent.bitIndex)) {\n    child.parent = parent;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((child.int) > (parent.int)) {\n    child.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = parent;\n} "},"status":-2},{"failures":[],"tindex":"8eae80a1-21ef-11e6-9b2a-55222d69f5e1","series":0,"name":"replace","transplant":{"toString":"recalcHeight()","position":"org.apache.commons.collections4.list.TreeList:388","type":"CtInvocationImpl","sourcecode":"recalcHeight()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if ((hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"8eae80a2-21ef-11e6-9b2a-4f2d80fbbc2b","series":0,"name":"replace","transplant":{"toString":"if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n    return true;\n} ","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:73","type":"CtIfImpl","sourcecode":"if (object == (org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.this)) {\n    return true;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"toString":"if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n    final org.apache.commons.collections4.comparators.ComparatorChain<?> chain = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n    return (null == (orderingBits) ? null == (chain.orderingBits) : orderingBits.equals(chain.orderingBits)) && (null == (comparatorChain) ? null == (chain.comparatorChain) : comparatorChain.equals(chain.comparatorChain));\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:339","type":"CtIfImpl","sourcecode":"if (object.getClass().equals(org.apache.commons.collections4.comparators.ComparatorChain.this.getClass())) {\n    final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(object));\n    return (null == (java.util.BitSet) ? null == (chain.java.util.BitSet) : java.util.BitSet.equals(chain.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (chain.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(chain.java.util.List<java.util.Comparator<?>>));\n} "},"status":-2},{"failures":[],"tindex":"8eb0ca93-21ef-11e6-9b2a-2b0ade10ed60","series":0,"name":"replace","transplant":{"toString":"removeAllNodes()","position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"removeAllNodes()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"out.defaultWriteObject()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:118","type":"CtInvocationImpl","sourcecode":"out.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"8eb0ca94-21ef-11e6-9b2a-e549a8b87000","series":0,"name":"replace","transplant":{"toString":"out.print(\"(this Map)\")","position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"out.print(\"(this Map)\")"},"variableMap":{"out":"object"},"type":"adrStmt","transplantationPoint":{"toString":"if (result) {\n    setOrder.remove(object);\n} ","position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (result) {\n    java.util.List<E>.remove(object);\n} "},"status":-2},{"failures":[],"tindex":"8eb0ca95-21ef-11e6-9b2a-a735f83cea94","series":0,"name":"replace","transplant":{"toString":"removeLRUEntry = true","position":"org.apache.commons.collections4.map.LRUMap:252","type":"CtAssignmentImpl","sourcecode":"removeLRUEntry = true"},"variableMap":{"removeLRUEntry":"exhausted"},"type":"adrStmt","transplantationPoint":{"toString":"exhausted = true","position":"org.apache.commons.collections4.iterators.PeekingIterator:89","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-3},{"failures":[],"tindex":"8eb0f1a6-21ef-11e6-9b2a-c7909fb1e2eb","series":0,"name":"replace","transplant":{"toString":"first = false","position":"org.apache.commons.collections4.map.ListOrderedMap:369","type":"CtAssignmentImpl","sourcecode":"first = false"},"variableMap":{"first":"allNull"},"type":"adrStmt","transplantationPoint":{"toString":"allNull = false","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:100","type":"CtAssignmentImpl","sourcecode":"allNull = false"},"status":-3},{"failures":[],"tindex":"8eb0f1a7-21ef-11e6-9b2a-73d5c1b0b389","series":0,"name":"replace","transplant":{"toString":"findConstructor()","position":"org.apache.commons.collections4.functors.InstantiateFactory:84","type":"CtInvocationImpl","sourcecode":"findConstructor()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"checkInterval(index, 0, size())","position":"org.apache.commons.collections4.list.TreeList:202","type":"CtInvocationImpl","sourcecode":"checkInterval(index, 0, size())"},"status":-2},{"failures":[],"tindex":"8eb0f1a8-21ef-11e6-9b2a-c3b7eda47f1b","series":0,"name":"add","transplant":{"toString":"checkChainIntegrity()","position":"org.apache.commons.collections4.comparators.ComparatorChain:268","type":"CtInvocationImpl","sourcecode":"checkChainIntegrity()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"addNode(newNode, node.next)","position":"org.apache.commons.collections4.list.AbstractLinkedList:483","type":"CtInvocationImpl","sourcecode":"addNode(newNode, node.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"8eb0f1a9-21ef-11e6-9b2a-bb6400878a3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"synchronized(lock) {\n    return decorated().toString();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:211","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return decorated().toString();\n}"},"status":-2},{"failures":[401],"tindex":"8eb0f1aa-21ef-11e6-9b2a-93b314d09aa3","series":0,"name":"replace","transplant":{"toString":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.list.UnmodifiableList:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"8eb0f1ab-21ef-11e6-9b2a-51f95189a874","series":0,"name":"replace","transplant":{"toString":"if ((lastReturnedNode) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"toString":"doRedBlackDelete(node)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:543","type":"CtInvocationImpl","sourcecode":"doRedBlackDelete(node)"},"status":-3},{"failures":[],"tindex":"8eb0f1ac-21ef-11e6-9b2a-29d281dbd687","series":0,"name":"replace","transplant":{"toString":"initialCapacity = calculateNewCapacity(initialCapacity)","position":"org.apache.commons.collections4.map.AbstractHashedMap:148","type":"CtAssignmentImpl","sourcecode":"initialCapacity = calculateNewCapacity(initialCapacity)"},"variableMap":{"initialCapacity":"h"},"type":"adrStmt","transplantationPoint":{"toString":"h += h << 4","position":"org.apache.commons.collections4.map.MultiKeyMap:233","type":"CtOperatorAssignmentImpl","sourcecode":"h += h << 4"},"status":-2},{"failures":[],"tindex":"8eb0f1ad-21ef-11e6-9b2a-bba29d8453de","series":0,"name":"add","transplant":{"toString":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> first = null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> t = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(key , value , bitIndex)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:161","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(key , value , bitIndex)"},"status":-2},{"failures":[402],"tindex":"8eb118be-21ef-11e6-9b2a-2db1201c7538","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\")","position":"org.apache.commons.collections4.map.PredicatedMap:146","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:376","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[],"tindex":"8eb118bf-21ef-11e6-9b2a-cdf76b2ad173","series":0,"name":"replace","transplant":{"toString":"return hashCode & (dataSize - 1)","position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return hashCode & (dataSize - 1)"},"variableMap":{"hashCode":"value","dataSize":"value"},"type":"adrStmt","transplantationPoint":{"toString":"return count.value","position":"org.apache.commons.collections4.bag.AbstractMapBag:112","type":"CtReturnImpl","sourcecode":"return count.int"},"status":-2},{"failures":[],"tindex":"8eb118c0-21ef-11e6-9b2a-e5a83a2c1c4f","series":0,"name":"replace","transplant":{"toString":"return isEmpty()","position":"org.apache.commons.collections4.ArrayStack:78","type":"CtReturnImpl","sourcecode":"return isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:511","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"8eb118c1-21ef-11e6-9b2a-437c3a4e7f68","series":0,"name":"replace","transplant":{"toString":"return current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl","sourcecode":"return current().getKey()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (entry != null) {\n    return entry.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (entry != null) {\n    return entry.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"status":-2},{"failures":[],"tindex":"8eb118c2-21ef-11e6-9b2a-a5f6eba76759","series":0,"name":"replace","transplant":{"toString":"return decorated().retainAll(null)","position":"org.apache.commons.collections4.bag.CollectionBag:154","type":"CtReturnImpl","sourcecode":"return decorated().retainAll(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.collections4.map.MultiKeyMap:295","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"8eb118c3-21ef-11e6-9b2a-0355aff39dcc","series":0,"name":"replace","transplant":{"toString":"return java.util.Collections.<E>emptySet()","position":"org.apache.commons.collections4.SetUtils:48","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<E>emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return keys","position":"org.apache.commons.collections4.map.CompositeMap:324","type":"CtReturnImpl","sourcecode":"return keys"},"status":-2},{"failures":[403,404,405,406],"tindex":"8eb118c4-21ef-11e6-9b2a-c7b128ba7a79","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\")","position":"org.apache.commons.collections4.functors.ComparatorPredicate:124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:114","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + type) + \"s beyond the end of the array. \"))"},"status":-1},{"failures":[],"tindex":"8eb118c5-21ef-11e6-9b2a-075234b709b3","series":0,"name":"replace","transplant":{"toString":"if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} ","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"total","lengthInBits":"total","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"total","otherOffsetInBits":"total","otherLengthInBits":"total"},"type":"adrStmt","transplantationPoint":{"toString":"while (it.hasMoreElements()) {\n    total++;\n    it.nextElement();\n}","position":"org.apache.commons.collections4.CollectionUtils:1348","type":"CtWhileImpl","sourcecode":"while (it.hasMoreElements()) {\n    total++;\n    it.nextElement();\n}"},"status":-3},{"failures":[],"tindex":"8eb118c6-21ef-11e6-9b2a-61d2f49f85ea","series":0,"name":"replace","transplant":{"toString":"if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n    if ((vUp[i]) <= (vDown[(i + delta)])) {\n        return buildSnake(vUp[i], ((k + start1) - start2), end1, end2);\n    } \n} ","position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n    if ((int[][i]) <= (int[][(i + delta)])) {\n        return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"end1","d":"start1","vDown":"vDown","delta":"start2","end2":"delta","i":"start1","end1":"start2","k":"delta","start2":"offset"},"type":"adrStmt","transplantationPoint":{"toString":"for (int d = 0 ; d <= offset ; ++d) {\n    for (int k = -d ; k <= d ; k += 2) {\n        final int i = k + offset;\n        if ((k == (-d)) || ((k != d) && ((vDown[(i - 1)]) < (vDown[(i + 1)])))) {\n            vDown[i] = vDown[(i + 1)];\n        } else {\n            vDown[i] = (vDown[(i - 1)]) + 1;\n        }\n        int x = vDown[i];\n        int y = ((x - start1) + start2) - k;\n        while (((x < end1) && (y < end2)) && (equator.equate(sequence1.get(x), sequence2.get(y)))) {\n            vDown[i] = ++x;\n            ++y;\n        }\n        if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n            if ((vUp[(i - delta)]) <= (vDown[i])) {\n                return buildSnake(vUp[(i - delta)], ((k + start1) - start2), end1, end2);\n            } \n        } \n    }\n    for (int k = delta - d ; k <= (delta + d) ; k += 2) {\n        final int i = (k + offset) - delta;\n        if ((k == (delta - d)) || ((k != (delta + d)) && ((vUp[(i + 1)]) <= (vUp[(i - 1)])))) {\n            vUp[i] = (vUp[(i + 1)]) - 1;\n        } else {\n            vUp[i] = vUp[(i - 1)];\n        }\n        int x = (vUp[i]) - 1;\n        int y = ((x - start1) + start2) - k;\n        while (((x >= start1) && (y >= start2)) && (equator.equate(sequence1.get(x), sequence2.get(y)))) {\n            vUp[i] = x--;\n            y--;\n        }\n        if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n            if ((vUp[i]) <= (vDown[(i + delta)])) {\n                return buildSnake(vUp[i], ((k + start1) - start2), end1, end2);\n            } \n        } \n    }\n}","position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; d <= offset ; ++d) {\n    for (int int = -d ; k <= d ; k += 2) {\n        final int int = k + offset;\n        if ((k == (-d)) || ((k != d) && ((int[][(i - 1)]) < (int[][(i + 1)])))) {\n            int[][i] = int[][(i + 1)];\n        } else {\n            int[][i] = (int[][(i - 1)]) + 1;\n        }\n        int int = int[][i];\n        int int = ((x - start1) + start2) - k;\n        while (((x < end1) && (y < end2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n            int[][i] = ++x;\n            ++y;\n        }\n        if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n            if ((int[][(i - delta)]) <= (int[][i])) {\n                return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n            } \n        } \n    }\n    for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n        final int int = (k + offset) - delta;\n        if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n            int[][i] = (int[][(i + 1)]) - 1;\n        } else {\n            int[][i] = int[][(i - 1)];\n        }\n        int int = (int[][i]) - 1;\n        int int = ((x - start1) + start2) - k;\n        while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n            int[][i] = x--;\n            y--;\n        }\n        if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n            if ((int[][i]) <= (int[][(i + delta)])) {\n                return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"8eb13fd7-21ef-11e6-9b2a-5f07a9709ff0","series":0,"name":"add","transplant":{"toString":"leftChild.setParent(node.getParent(dataElement), dataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:857","type":"CtInvocationImpl","sourcecode":"leftChild.setParent(node.getParent(dataElement), dataElement)"},"variableMap":{"leftChild":"from","node":"to","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"toString":"if (to != null) {\n    if (from == null) {\n        to.setBlack(dataElement);\n    } else {\n        to.copyColor(from, dataElement);\n    }\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (to != null) {\n    if (from == null) {\n        to.setBlack(dataElement);\n    } else {\n        to.copyColor(from, dataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"8eb13fd8-21ef-11e6-9b2a-473d751cf9c9","series":0,"name":"replace","transplant":{"toString":"if (!(setNextObject())) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:222","type":"CtIfImpl","sourcecode":"if (!(setNextObject())) {\n    return false;\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl","sourcecode":"return decorated().isEmpty()"},"status":-2},{"failures":[407],"tindex":"8eb13fd9-21ef-11e6-9b2a-551e763c6bbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.iterators.PeekingIterator:154","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[408,409,410,411,412,413,414,415,416],"tindex":"8eb13fda-21ef-11e6-9b2a-b96236563dce","series":0,"name":"replace","transplant":{"toString":"return \"ComparableComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return delegate.size()","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.size()"},"status":-1},{"failures":[],"tindex":"8eb166eb-21ef-11e6-9b2a-c379dd3edb0a","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return 0","position":"org.apache.commons.collections4.map.StaticBucketMap:155","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"8eb166ec-21ef-11e6-9b2a-69c87758b8f8","series":0,"name":"replace","transplant":{"toString":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(org.apache.commons.collections4.map.Flat3Map.this)","position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(org.apache.commons.collections4.map.Flat3Map.this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return ((java.util.Collection<C>)(index.get(key)))","position":"org.apache.commons.collections4.collection.IndexedCollection:191","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<C>)(org.apache.commons.collections4.MultiMap<K, C>.get(key)))"},"status":-2},{"failures":[417,418,419,420,421,422],"tindex":"8eb166ed-21ef-11e6-9b2a-e9d760b2349d","series":0,"name":"replace","transplant":{"toString":"if ((hasNext) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"toString":"while (((currentIterator.hasNext()) == false) && (!(chainExhausted))) {\n    final java.util.Iterator<? extends E> nextIterator = nextIterator((++(callCounter)));\n    if (nextIterator != null) {\n        currentIterator = nextIterator;\n    } else {\n        chainExhausted = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = nextIterator((++(int)));\n    if (nextIterator != null) {\n        java.util.Iterator<? extends E> = nextIterator;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[],"tindex":"8eb166ee-21ef-11e6-9b2a-c581f12901da","series":0,"name":"add","transplant":{"toString":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(org.apache.commons.collections4.map.SingletonMap.this)","position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(org.apache.commons.collections4.map.SingletonMap.this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(collection)","position":"org.apache.commons.collections4.CollectionUtils:1732","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(collection)"},"status":-2},{"failures":[423],"tindex":"8eb166ef-21ef-11e6-9b2a-15f72da1e46a","series":0,"name":"replace","transplant":{"toString":"return java.util.Collections.synchronizedSortedSet(set)","position":"org.apache.commons.collections4.SetUtils:275","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSortedSet(set)"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"toString":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(sub)","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:144","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(sub)"},"status":-1},{"failures":[],"tindex":"8eb166f0-21ef-11e6-9b2a-5fe31216e757","series":0,"name":"replace","transplant":{"toString":"return lastReturnedNode","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1650","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"lastReturnedNode":"rval"},"type":"adrStmt","transplantationPoint":{"toString":"return rval","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:579","type":"CtReturnImpl","sourcecode":"return rval"},"status":-3},{"failures":[424,425,426,427,428,429,430,431,432],"tindex":"8eb166f1-21ef-11e6-9b2a-f3e15479a499","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.NullPointerException(\"null keys not allowed\")","position":"org.apache.commons.collections4.map.AbstractReferenceMap:264","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"null keys not allowed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())))","position":"org.apache.commons.collections4.list.TreeList:288","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + index) + \", size=\") + (size())))"},"status":-1},{"failures":[],"tindex":"8eb18e02-21ef-11e6-9b2a-e193ae8c04c9","series":0,"name":"replace","transplant":{"toString":"recalcHeight()","position":"org.apache.commons.collections4.list.TreeList:388","type":"CtInvocationImpl","sourcecode":"recalcHeight()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"doWriteObject(out)","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:233","type":"CtInvocationImpl","sourcecode":"doWriteObject(out)"},"status":-2},{"failures":[433,434,435,436,437,438,439,440,441,442,443,444],"tindex":"8eb18e03-21ef-11e6-9b2a-01f809131f2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(nextObjectSet)) {\n    if (!(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"8eb18e04-21ef-11e6-9b2a-e3eac1dc516e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (answer instanceof java.lang.Double) {\n    return ((java.lang.Double)(answer));\n} ","position":"org.apache.commons.collections4.MapUtils:323","type":"CtIfImpl","sourcecode":"if (answer instanceof java.lang.Double) {\n    return ((java.lang.Double)(answer));\n} "},"status":0},{"failures":[445],"tindex":"8eb18e05-21ef-11e6-9b2a-8fa7c59b1f5e","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"Load factor must be greater than 0\")","position":"org.apache.commons.collections4.map.AbstractHashedMap:145","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Load factor must be greater than 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:89","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[122],"tindex":"8eb18e06-21ef-11e6-9b2a-59ae9605737b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl","sourcecode":"checkModCount()"},"status":-1},{"failures":[],"tindex":"8eb18e07-21ef-11e6-9b2a-ad066b74f4df","series":0,"name":"replace","transplant":{"toString":"out.print(\"(this Map)\")","position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"out.print(\"(this Map)\")"},"variableMap":{"out":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (obj instanceof java.util.Map.Entry) {\n    for (final java.lang.Object element : array) {\n        final java.util.Map.Entry<K, V> entry = ((java.util.Map.Entry<K, V>)(element));\n        map.put(entry.getKey(), entry.getValue());\n    }\n} else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object element : array) {\n        final org.apache.commons.collections4.KeyValue<K, V> keyval = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n        map.put(keyval.getKey(), keyval.getValue());\n    }\n} else if (obj instanceof java.lang.Object[]) {\n    for (int i = 0 ; i < (array.length) ; i++) {\n        final java.lang.Object[] sub = ((java.lang.Object[])(array[i]));\n        if ((sub == null) || ((sub.length) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n        } \n        map.put(((K)(sub[0])), ((V)(sub[1])));\n    }\n} else {\n    for (int i = 0 ; i < ((array.length) - 1) ; ) {\n        map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n    }\n}","position":"org.apache.commons.collections4.MapUtils:1150","type":"CtIfImpl","sourcecode":"if (obj instanceof java.util.Map.Entry) {\n    for (final java.lang.Object java.lang.Object : array) {\n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(element));\n        map.put(entry.getKey(), entry.getValue());\n    }\n} else if (obj instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : array) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(element));\n        map.put(keyval.getKey(), keyval.getValue());\n    }\n} else if (obj instanceof java.lang.Object[]) {\n    for (int int = 0 ; i < (array.int) ; i++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(array[i]));\n        if ((sub == null) || ((sub.int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + i));\n        } \n        map.put(((K)(sub[0])), ((V)(sub[1])));\n    }\n} else {\n    for (int int = 0 ; i < ((array.int) - 1) ; ) {\n        map.put(((K)(array[(i++)])), ((V)(array[(i++)])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"8eb1b518-21ef-11e6-9b2a-77bdabf7e0f4","series":0,"name":"add","transplant":{"toString":"setOrder = new java.util.ArrayList<E>()","position":"org.apache.commons.collections4.set.ListOrderedSet:138","type":"CtAssignmentImpl","sourcecode":"java.util.List<E> = new java.util.ArrayList<E>()"},"variableMap":{"setOrder":"nextPermutation"},"type":"adrStmt","transplantationPoint":{"toString":"nextPermutation = null","position":"org.apache.commons.collections4.iterators.PermutationIterator:126","type":"CtAssignmentImpl","sourcecode":"java.util.List<E> = null"},"status":-2},{"failures":[],"tindex":"8eb1b519-21ef-11e6-9b2a-e3d8d930d71c","series":0,"name":"replace","transplant":{"toString":"if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} ","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((offsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((otherOffsetInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((lengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((otherLengthInBits % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"leastIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"leastIndex","otherOffsetInBits":"leastIndex","otherLengthInBits":"i"},"type":"adrStmt","transplantationPoint":{"toString":"if ((comparator.compare(curObject, leastObject)) < 0) {\n    leastObject = curObject;\n    leastIndex = i;\n} ","position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(curObject, leastObject)) < 0) {\n    leastObject = curObject;\n    leastIndex = i;\n} "},"status":-3},{"failures":[446],"tindex":"8eb1b51a-21ef-11e6-9b2a-0feb0db84851","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \")","position":"org.apache.commons.collections4.functors.InstantiateFactory:110","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.bag.UnmodifiableBag:123","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"8eb1b51b-21ef-11e6-9b2a-e799c62dee26","series":0,"name":"replace","transplant":{"toString":"return getSortedBag().last()","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:95","type":"CtReturnImpl","sourcecode":"return getSortedBag().last()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl","sourcecode":"return getMap().firstKey()"},"status":-2},{"failures":[],"tindex":"8eb1b51c-21ef-11e6-9b2a-8b65250576e7","series":0,"name":"replace","transplant":{"toString":"if (index > (size)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (size)) + \").\"));\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (index > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn't get the node: \" + \"index (\") + index) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"nextIndex","index":"nextIndex"},"type":"adrStmt","transplantationPoint":{"toString":"if ((next) == null) {\n    next = parent.root.get(((nextIndex) - 1));\n} else {\n    next = next.previous();\n}","position":"org.apache.commons.collections4.list.TreeList:1072","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(((int) - 1));\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.previous();\n}"},"status":-2},{"failures":[],"tindex":"8eb1b51d-21ef-11e6-9b2a-9d57c1760e47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"threshold = calculateThreshold(data.length, loadFactor)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1046","type":"CtAssignmentImpl","sourcecode":"int = calculateThreshold(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int, float)"},"status":0},{"failures":[],"tindex":"8eb1b51e-21ef-11e6-9b2a-0f7be427a9b8","series":0,"name":"replace","transplant":{"toString":"if ((size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if ((size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"stream.writeObject(entry.getKey())","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2419","type":"CtInvocationImpl","sourcecode":"stream.writeObject(entry.getKey())"},"status":0},{"failures":[],"tindex":"8eb1b51f-21ef-11e6-9b2a-5d7a3c733260","series":0,"name":"replace","transplant":{"toString":"int result = (\"ConstantTransformer\".hashCode()) << 2","position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int size = 0","position":"org.apache.commons.collections4.map.CompositeMap:430","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8eb1b520-21ef-11e6-9b2a-cf3e1da0da76","series":0,"name":"replace","transplant":{"toString":"return firstEntry().getKey()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:784","type":"CtReturnImpl","sourcecode":"return firstEntry().getKey()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return iterator.getKey()","position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.getKey()"},"status":-2},{"failures":[],"tindex":"8eb1dc31-21ef-11e6-9b2a-cf4dcee7e061","series":0,"name":"replace","transplant":{"toString":"throw new java.util.NoSuchElementException(\"queue is empty\")","position":"org.apache.commons.collections4.queue.CircularFifoQueue:289","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.SETVALUE_INVALID)","position":"org.apache.commons.collections4.map.AbstractLinkedMap:383","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)"},"status":-1},{"failures":[447,448,449,450,451,452],"tindex":"8eb1dc32-21ef-11e6-9b2a-6f945d94a8c3","series":0,"name":"add","transplant":{"toString":"if ((vUp[i]) <= (vDown[(i + delta)])) {\n    return buildSnake(vUp[i], ((k + start1) - start2), end1, end2);\n} ","position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][i]) <= (int[][(i + delta)])) {\n    return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n} "},"variableMap":{"vUp":"vDown","start1":"end2","vDown":"vUp","delta":"i","end2":"start2","i":"k","end1":"end1","k":"start2","start2":"start1"},"type":"adrStmt","transplantationPoint":{"toString":"if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n    if ((vUp[(i - delta)]) <= (vDown[i])) {\n        return buildSnake(vUp[(i - delta)], ((k + start1) - start2), end1, end2);\n    } \n} ","position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((delta % 2) != 0) && ((delta - d) <= k)) && (k <= (delta + d))) {\n    if ((int[][(i - delta)]) <= (int[][i])) {\n        return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2);\n    } \n} "},"status":-1},{"failures":[],"tindex":"8eb1dc33-21ef-11e6-9b2a-bb63280ee29c","series":0,"name":"add","transplant":{"toString":"this.map = map","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:54","type":"CtAssignmentImpl","sourcecode":"this.java.util.Map<K, V> = map"},"variableMap":{"map":"normalMap"},"type":"adrStmt","transplantationPoint":{"toString":"normalMap = new java.util.HashMap<K, V>()","position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:100","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = new java.util.HashMap<K, V>()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":93,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}