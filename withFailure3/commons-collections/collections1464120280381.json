{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":111,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":176,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":68,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":81,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":14,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":70,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":75,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":181,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":131,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":66,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":132,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":133,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsSelfHashCode":144,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":100,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":72,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":39,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":101,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":13,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":159,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":124,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":136,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":191,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":158,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":96,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":129,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":179,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":161,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":182,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":141,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":78,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":140,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":55,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":26,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":6,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":19,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":9,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":33,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":56,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":119,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":27,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":173,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":174,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":135,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":47,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":139,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":172,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":121,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":11,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":188,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":52,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":53,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":51,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":155,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":156,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":186,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":16,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":163,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":190,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":49,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":127,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":143,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":48,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":50,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":165,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":42,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":150,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":187,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":37,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":128,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":77,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":145,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":61,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":138,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":148,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":118,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":157,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetClearChangesMap":189,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":151,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":3,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":63,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":46,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":17,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":115,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":168,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":105,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":147,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":185,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":73,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":106},"transformations":[{"failures":[],"tindex":"bfb85060-21ea-11e6-bad7-0764d92b839b","series":0,"name":"replace","transplant":{"toString":"final int leastIndex = least()","position":"org.apache.commons.collections4.iterators.CollatingIterator:251","type":"CtLocalVariableImpl","sourcecode":"final int int = least()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int entrySize = in.readInt()","position":"org.apache.commons.collections4.bag.AbstractMapBag:519","type":"CtLocalVariableImpl","sourcecode":"final int int = in.readInt()"},"status":-2},{"failures":[],"tindex":"bfb87771-21ea-11e6-bad7-13a1f07fbf1f","series":0,"name":"add","transplant":{"toString":"_reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:62","type":"CtInvocationImpl","sourcecode":"_reset()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (!(inRange(key))) {\n    throw new java.lang.IllegalArgumentException((\"Key is out of range: \" + key));\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1739","type":"CtIfImpl","sourcecode":"if (!(inRange(key))) {\n    throw new java.lang.IllegalArgumentException((\"Key is out of range: \" + key));\n} "},"status":-2},{"failures":[],"tindex":"bfb87772-21ea-11e6-bad7-875d542d95ba","series":0,"name":"add","transplant":{"toString":"if (!(setPreviousObject())) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtIfImpl","sourcecode":"if (!(setPreviousObject())) {\n    return false;\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (parent.isEmpty()) {\n    return false;\n} ","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n    return false;\n} "},"status":-2},{"failures":[0,1,2],"tindex":"bfb87773-21ea-11e6-bad7-0fa86ffcc1af","series":0,"name":"replace","transplant":{"toString":"if ((isLocked) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"toString":"if ((uniqueIndex) && (index.containsKey(key))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} ","position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(key))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[],"tindex":"bfb87774-21ea-11e6-bad7-cd85c21cfec7","series":0,"name":"replace","transplant":{"toString":"grow()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"grow()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.util.Map.Entry<? extends V, ? extends K> e : map.entrySet()) {\n    put(e.getKey(), e.getValue());\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2106","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends V, ? extends K> java.util.Map.Entry<? extends V, ? extends K> : map.entrySet()) {\n    put(e.getKey(), e.getValue());\n}"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"bfb89e85-21ea-11e6-bad7-b14b85b6a72a","series":0,"name":"replace","transplant":{"toString":"if (mut == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (mut == null) {\n    return false;\n} "},"variableMap":{"mut":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if (value == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> element : data) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry = element;\n        while (entry != null) {\n            if ((entry.getValue()) == null) {\n                return true;\n            } \n            entry = entry.next;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> element : data) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> entry = element;\n        while (entry != null) {\n            if (isEqualValue(value, entry.getValue())) {\n                return true;\n            } \n            entry = entry.next;\n        }\n    }\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (value == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n        while (entry != null) {\n            if ((entry.getValue()) == null) {\n                return true;\n            } \n            entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = element;\n        while (entry != null) {\n            if (isEqualValue(value, entry.getValue())) {\n                return true;\n            } \n            entry = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[21,22,23,24,25],"tindex":"bfb89e86-21ea-11e6-bad7-7b9c43f84438","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"parent.left = child","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:510","type":"CtAssignmentImpl","sourcecode":"parent.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = child"},"status":-1},{"failures":[],"tindex":"bfb8c597-21ea-11e6-bad7-25013b6961a2","series":0,"name":"add","transplant":{"toString":"final boolean toInclusive = isToInclusive()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1819","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = isToInclusive()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"boolean modified = false","position":"org.apache.commons.collections4.bag.CollectionSortedBag:143","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,9,36,37,38,39,40,10,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,11,57,58,59,60,61,62,63,64,65,66,67,68,12,69,70,71,72,73,74,75,76,77,13,78,79,80,81,82,14,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,15,99,100,101,102,103,104,105,106,107,108],"tindex":"bfb8c598-21ea-11e6-bad7-f93c340680e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.collections4.map.AbstractReferenceMap.this.keyType = keyType","position":"org.apache.commons.collections4.map.AbstractReferenceMap:168","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap.this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength = keyType"},"status":-1},{"failures":[],"tindex":"bfb8c599-21ea-11e6-bad7-83270b16b0d7","series":0,"name":"replace","transplant":{"toString":"convertToMap()","position":"org.apache.commons.collections4.map.Flat3Map:388","type":"CtInvocationImpl","sourcecode":"convertToMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"out.writeInt(entry.getValue().value)","position":"org.apache.commons.collections4.bag.AbstractMapBag:504","type":"CtInvocationImpl","sourcecode":"out.writeInt(entry.getValue().int)"},"status":-2},{"failures":[109,110],"tindex":"bfb8c59a-21ea-11e6-bad7-c79b7ceaafe2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((currentIterator) == null) {\n    updateCurrentIterator();\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    updateCurrentIterator();\n} "},"status":-1},{"failures":[],"tindex":"bfb8c59b-21ea-11e6-bad7-f7ec818c2787","series":0,"name":"replace","transplant":{"toString":"final java.util.Iterator<?> iterator = ((java.util.Collection<?>)(object)).iterator()","position":"org.apache.commons.collections4.CollectionUtils:1272","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(object)).iterator()"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"final java.util.Iterator<?> it = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))))","position":"org.apache.commons.collections4.IteratorUtils:1085","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(method.invoke(obj, ((java.lang.Object[])(null)))))"},"status":-2},{"failures":[111],"tindex":"bfb8ecac-21ea-11e6-bad7-e7a5cc7cd27b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"doRedBlackDelete(node)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1593","type":"CtInvocationImpl","sourcecode":"doRedBlackDelete(node)"},"status":-1},{"failures":[],"tindex":"bfb8ecad-21ea-11e6-bad7-dd4357a2bc02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (final org.apache.commons.collections4.MapIterator<?, ?> it = getMapIterator(dataElement) ; it.hasNext() ; ) {\n    final java.lang.Object key = it.next();\n    final java.lang.Object value = it.getValue();\n    if ((value.equals(other.get(key))) == false) {\n        return false;\n    } \n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = getMapIterator(dataElement) ; it.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = it.next();\n    final java.lang.Object java.lang.Object = it.getValue();\n    if ((value.equals(other.get(key))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"bfb8ecae-21ea-11e6-bad7-056cb3ed8263","series":0,"name":"add","transplant":{"toString":"return node == null ? null : node.getValue()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2090","type":"CtReturnImpl","sourcecode":"return node == null ? null : node.getValue()"},"variableMap":{"node":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"return entry.getValue()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:248","type":"CtReturnImpl","sourcecode":"return entry.getValue()"},"status":-2},{"failures":[],"tindex":"bfb8ecaf-21ea-11e6-bad7-29dd535aa2f0","series":0,"name":"replace","transplant":{"toString":"return nextEntry().getValue()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:891","type":"CtReturnImpl","sourcecode":"return nextEntry().getValue()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return answer","position":"org.apache.commons.collections4.MapUtils:368","type":"CtReturnImpl","sourcecode":"return answer"},"status":-2},{"failures":[112,113,114,115,116,117,118,119,120,121,122],"tindex":"bfb8ecb0-21ea-11e6-bad7-453a73de9598","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (item.contains(obj)) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (item.contains(obj)) {\n    return true;\n} "},"status":-1},{"failures":[1,123,2,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"bfb8ecb1-21ea-11e6-bad7-59e1ffc7ee62","series":0,"name":"add","transplant":{"toString":"if ((size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} ","position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if ((size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"reindex()","position":"org.apache.commons.collections4.collection.IndexedCollection:107","type":"CtInvocationImpl","sourcecode":"reindex()"},"status":-1},{"failures":[],"tindex":"bfb913c2-21ea-11e6-bad7-69f600eb119b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.SingletonMap:535","type":"CtIfImpl","sourcecode":"if (obj == (org.apache.commons.collections4.map.SingletonMap.this)) {\n    return true;\n} "},"status":0},{"failures":[145,146],"tindex":"bfb913c3-21ea-11e6-bad7-bdac26e82e62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (iPredicates.length) ; i++) {\n    if ((iPredicates[i].evaluate(input)) == true) {\n        iClosures[i].execute(input);\n        return ;\n    } \n}","position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (org.apache.commons.collections4.Predicate<? super E>[].int) ; i++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][i].evaluate(input)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][i].execute(input);\n        return ;\n    } \n}"},"status":-1},{"failures":[],"tindex":"bfb913c4-21ea-11e6-bad7-39592a63b90d","series":0,"name":"replace","transplant":{"toString":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(org.apache.commons.collections4.map.AbstractHashedMap.this)","position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(org.apache.commons.collections4.map.AbstractHashedMap.this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return new org.apache.commons.collections4.bag.AbstractMapBag.BagIterator<E>(org.apache.commons.collections4.bag.AbstractMapBag.this)","position":"org.apache.commons.collections4.bag.AbstractMapBag:168","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.AbstractMapBag.BagIterator<E>(org.apache.commons.collections4.bag.AbstractMapBag.this)"},"status":-2},{"failures":[],"tindex":"bfb913c5-21ea-11e6-bad7-6dc9853c84b0","series":0,"name":"replace","transplant":{"toString":"p.predecessor = p.parent","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:555","type":"CtAssignmentImpl","sourcecode":"p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"p","parent":"p","predecessor":"parent"},"type":"adrStmt","transplantationPoint":{"toString":"h.parent.right = p","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:585","type":"CtAssignmentImpl","sourcecode":"h.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = p"},"status":-3},{"failures":[],"tindex":"bfb913c6-21ea-11e6-bad7-ad5655da4787","series":0,"name":"replace","transplant":{"toString":"while ((cacheSize) > (maximumCacheSize)) {\n    getNodeFromCache();\n}","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:123","type":"CtWhileImpl","sourcecode":"while ((int) > (int)) {\n    getNodeFromCache();\n}"},"variableMap":{"maximumCacheSize":"size","cacheSize":"size"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < size ; i++) {\n    K k = ((K)(stream.readObject()));\n    V v = ((V)(stream.readObject()));\n    put(k, v);\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < size ; i++) {\n    K K = ((K)(stream.readObject()));\n    V V = ((V)(stream.readObject()));\n    put(k, v);\n}"},"status":-3},{"failures":[],"tindex":"bfb93ad7-21ea-11e6-bad7-efa1eaeb5229","series":0,"name":"replace","transplant":{"toString":"if ((hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if ((hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n    currentNode = getGrandParent(currentNode, dataElement);\n} else {\n    if (currentNode.isRightChild(dataElement)) {\n        currentNode = getParent(currentNode, dataElement);\n        rotateLeft(currentNode, dataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n    if ((getGrandParent(currentNode, dataElement)) != null) {\n        rotateRight(getGrandParent(currentNode, dataElement), dataElement);\n    } \n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(y, dataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(y, dataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n    currentNode = getGrandParent(currentNode, dataElement);\n} else {\n    if (currentNode.isRightChild(dataElement)) {\n        currentNode = getParent(currentNode, dataElement);\n        rotateLeft(currentNode, dataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getGrandParent(currentNode, dataElement), dataElement);\n    if ((getGrandParent(currentNode, dataElement)) != null) {\n        rotateRight(getGrandParent(currentNode, dataElement), dataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"bfb93ad8-21ea-11e6-bad7-516ca64d9cf8","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\")","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:730","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1634","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":0},{"failures":[147,148,149,150,151,152,153,154,155,156,157,3,158,159,160,161,162,4,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,5,179,180,181,182,183,184,185,186],"tindex":"bfb93ad9-21ea-11e6-bad7-71d0fb39b66b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (key != null) {\n    final char[] chars = key.toString().toCharArray();\n    for (int i = (chars.length) - 1 ; i >= 0 ; i--) {\n        chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n    }\n    return new java.lang.String(chars);\n} ","position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (key != null) {\n    final char[] char[] = key.toString().toCharArray();\n    for (int int = (chars.int) - 1 ; i >= 0 ; i--) {\n        chars[i] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(chars[i]));\n    }\n    return new java.lang.String(chars);\n} "},"status":-1},{"failures":[],"tindex":"bfb93ada-21ea-11e6-bad7-ab5bf1dc9351","series":0,"name":"add","transplant":{"toString":"grow()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"grow()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (iterator == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:977","type":"CtIfImpl","sourcecode":"if (iterator == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"bfb93adb-21ea-11e6-bad7-9d4fc4627ae8","series":0,"name":"add","transplant":{"toString":"findCloneMethod()","position":"org.apache.commons.collections4.functors.PrototypeFactory:133","type":"CtInvocationImpl","sourcecode":"findCloneMethod()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"in.defaultReadObject()","position":"org.apache.commons.collections4.map.LRUMap:423","type":"CtInvocationImpl","sourcecode":"in.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"bfb961ec-21ea-11e6-bad7-b33d1e4cbb2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.addAll(list2)","position":"org.apache.commons.collections4.ListUtils:164","type":"CtInvocationImpl","sourcecode":"result.addAll(list2)"},"status":0},{"failures":[],"tindex":"bfb961ed-21ea-11e6-bad7-2df076d17319","series":0,"name":"replace","transplant":{"toString":"while ((loop != entry) && (loop != null)) {\n    previous = loop;\n    loop = loop.next;\n}","position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((loop != entry) && (loop != null)) {\n    previous = loop;\n    loop = loop.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","loop":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"updateEntry(entry, value)","position":"org.apache.commons.collections4.map.AbstractHashedMap:282","type":"CtInvocationImpl","sourcecode":"updateEntry(entry, value)"},"status":-3},{"failures":[],"tindex":"bfb961ee-21ea-11e6-bad7-7fbf97f0bb59","series":0,"name":"replace","transplant":{"toString":"return navigateNext().getValue()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1766","type":"CtReturnImpl","sourcecode":"return navigateNext().getValue()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return defaultValue","position":"org.apache.commons.collections4.MapUtils:371","type":"CtReturnImpl","sourcecode":"return defaultValue"},"status":-2},{"failures":[187],"tindex":"bfb961ef-21ea-11e6-bad7-410cdb479607","series":0,"name":"add","transplant":{"toString":"final int hash = \"BooleanComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int size = map.size()","position":"org.apache.commons.collections4.map.Flat3Map:375","type":"CtLocalVariableImpl","sourcecode":"final int int = map.size()"},"status":-1},{"failures":[],"tindex":"bfb961f0-21ea-11e6-bad7-2749b2007e5e","series":0,"name":"replace","transplant":{"toString":"try {\n    return (java.lang.reflect.Array.getLength(object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n}","position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(obj instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"bfb961f1-21ea-11e6-bad7-9b620d4d981b","series":0,"name":"replace","transplant":{"toString":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.ListIterator<E> tmpIterator = ((java.util.ListIterator<E>)(iterator))","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:51","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(iterator))"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"toString":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.ListIterator<E> li = ((java.util.ListIterator<E>)(iterator))","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:99","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>))"},"status":-3},{"failures":[],"tindex":"bfb961f2-21ea-11e6-bad7-751eb17355cb","series":0,"name":"replace","transplant":{"toString":"modify()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"modify()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (coll.contains(it.next())) {\n    it.remove();\n    modified = true;\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (coll.contains(it.next())) {\n    it.remove();\n    modified = true;\n} "},"status":-2},{"failures":[188,189],"tindex":"bfb961f3-21ea-11e6-bad7-8d549d5f35ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"status":-1},{"failures":[],"tindex":"bfb98904-21ea-11e6-bad7-a5f888cedbaf","series":0,"name":"replace","transplant":{"toString":"final int size = inputStream.readInt()","position":"org.apache.commons.collections4.list.AbstractLinkedList:622","type":"CtLocalVariableImpl","sourcecode":"final int int = inputStream.readInt()"},"variableMap":{"inputStream":"key"},"type":"adrStmt","transplantationPoint":{"toString":"final int hashCode = hash(key)","position":"org.apache.commons.collections4.map.AbstractHashedMap:455","type":"CtLocalVariableImpl","sourcecode":"final int int = hash(key)"},"status":-2},{"failures":[],"tindex":"bfb98905-21ea-11e6-bad7-1f1e3706b1c8","series":0,"name":"replace","transplant":{"toString":"for (int i = size ; i < index ; i++) {\n    decorated().add(null);\n}","position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl","sourcecode":"for (int int = size ; i < index ; i++) {\n    decorated().add(null);\n}"},"variableMap":{"size":"lengthInBits","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"toString":"if ((lengthInBits) >= (subtree.bitIndex)) {\n    lastOne = true;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2388","type":"CtIfImpl","sourcecode":"if ((int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    boolean = true;\n} "},"status":-2},{"failures":[190,191,192,193],"tindex":"bfb98906-21ea-11e6-bad7-95956b5e7911","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this.inverseBidiMap = inverseBidiMap","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:118","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap.this.org.apache.commons.collections4.BidiMap<V, K> = inverseBidiMap"},"status":-1},{"failures":[194,195],"tindex":"bfb98907-21ea-11e6-bad7-ef40ab026ffc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be greater than the array length\")","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be greater than the array length\")"},"status":-1},{"failures":[],"tindex":"bfb98908-21ea-11e6-bad7-eb59ac39c455","series":0,"name":"replace","transplant":{"toString":"if ((size()) == 0) {\n    return \"{}\";\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if ((size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return buf.toString()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1387","type":"CtReturnImpl","sourcecode":"return buf.toString()"},"status":-2},{"failures":[],"tindex":"bfb98909-21ea-11e6-bad7-23e0e785c2f5","series":0,"name":"replace","transplant":{"toString":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ConstantFactory.NULL_INSTANCE))","position":"org.apache.commons.collections4.functors.ConstantFactory:55","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.Factory))"},"variableMap":{"org.apache.commons.collections4.functors.ConstantFactory.NULL_INSTANCE":"org.apache.commons.collections4.functors.ExceptionFactory.INSTANCE"},"type":"adrStmt","transplantationPoint":{"toString":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ExceptionFactory.INSTANCE))","position":"org.apache.commons.collections4.functors.ExceptionFactory:48","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ExceptionFactory.org.apache.commons.collections4.functors.ExceptionFactory.org.apache.commons.collections4.Factory))"},"status":-2},{"failures":[],"tindex":"bfb9890a-21ea-11e6-bad7-0b4adf440bf7","series":0,"name":"replace","transplant":{"toString":"recalcHeight()","position":"org.apache.commons.collections4.list.TreeList:388","type":"CtInvocationImpl","sourcecode":"recalcHeight()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"findConstructor()","position":"org.apache.commons.collections4.functors.InstantiateFactory:100","type":"CtInvocationImpl","sourcecode":"findConstructor()"},"status":-2},{"failures":[],"tindex":"bfb9890b-21ea-11e6-bad7-d14e32ba607c","series":0,"name":"replace","transplant":{"toString":"purgeBeforeRead()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"purgeBeforeRead()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((validForUpdate) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":44,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}