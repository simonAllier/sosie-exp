{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":26,"org.apache.commons.collections4.list.TreeListTest.testListEquals":52,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":74,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":19,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":73,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":65,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":23,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":64,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":17,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":46,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":14,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":75,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":47,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":63,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":8,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":33,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":70,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":22,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":1,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":58,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":10,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":41,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":15,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":12,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":43,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":28,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":36,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":49,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":60,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":66,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":59,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":86,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":4,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":5,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":53,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":9,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":42,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":32,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":34},"transformations":[{"failures":[],"tindex":"7399da81-21ec-11e6-8c8e-1de1ac1f6225","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"iArgs = null","position":"org.apache.commons.collections4.functors.InstantiateTransformer:85","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[] = null"},"status":-2},{"failures":[],"tindex":"739a0192-21ec-11e6-8c8e-31535d50ab02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (isEmpty()) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K, V>emptyOrderedMapIterator();\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:424","type":"CtIfImpl","sourcecode":"if (isEmpty()) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K, V>emptyOrderedMapIterator();\n} "},"status":0},{"failures":[],"tindex":"739a0193-21ec-11e6-8c8e-c7886d896103","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"739a0194-21ec-11e6-8c8e-4188286552c2","series":0,"name":"replace","transplant":{"toString":"for (int i = size ; i < index ; i++) {\n    decorated().add(null);\n}","position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl","sourcecode":"for (int int = size ; i < index ; i++) {\n    decorated().add(null);\n}"},"variableMap":{"size":"hashCode","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"toString":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next;\n    final int index = hashIndex(entry.hashCode, newCapacity);\n    entry.next = newEntries[index];\n    newEntries[index] = entry;\n    entry = next;\n} while (entry != null )","position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = hashIndex(entry.int, newCapacity);\n    entry.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = newEntries[index];\n    newEntries[index] = entry;\n    entry = next;\n} while (entry != null )"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"739a28a5-21ec-11e6-8c8e-65f4497776bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"array[i] = ((T)(node.getValue()))","position":"org.apache.commons.collections4.list.AbstractLinkedList:183","type":"CtAssignmentImpl","sourcecode":"array[i] = ((T)(node.getValue()))"},"status":-1},{"failures":[],"tindex":"739a28a6-21ec-11e6-8c8e-5944f460d6ae","series":0,"name":"add","transplant":{"toString":"put(e.getKey(), e.getValue())","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:240","type":"CtInvocationImpl","sourcecode":"put(e.getKey(), e.getValue())"},"variableMap":{"e":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"put(entry.getKey(), entry.getValue())","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:182","type":"CtInvocationImpl","sourcecode":"put(entry.getKey(), entry.getValue())"},"status":-2},{"failures":[],"tindex":"739a28a7-21ec-11e6-8c8e-853fe7977c7d","series":0,"name":"add","transplant":{"toString":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()","position":"org.apache.commons.collections4.functors.AnyPredicate:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"status":-2},{"failures":[],"tindex":"739a28a8-21ec-11e6-8c8e-47b52f5074b4","series":0,"name":"replace","transplant":{"toString":"reindex()","position":"org.apache.commons.collections4.collection.IndexedCollection:107","type":"CtInvocationImpl","sourcecode":"reindex()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.util.Set<E> existingSet : getSets()) {\n    final java.util.Collection<E> intersects = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n    if ((intersects.size()) > 0) {\n        if ((org.apache.commons.collections4.set.CompositeSet.this.mutator) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}","position":"org.apache.commons.collections4.set.CompositeSet:344","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : getSets()) {\n    final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set);\n    if ((intersects.size()) > 0) {\n        if ((org.apache.commons.collections4.set.CompositeSet.this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        getMutator().resolveCollision(org.apache.commons.collections4.set.CompositeSet.this, existingSet, set, intersects);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(existingSet, set).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}"},"status":-2},{"failures":[43],"tindex":"739a4fb9-21ec-11e6-8c8e-d111ef5b1a4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((a == null) || (b == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} ","position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((a == null) || (b == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[44,45,46,47],"tindex":"739a4fba-21ec-11e6-8c8e-2f2b10443c50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"h ^= key1.hashCode()","position":"org.apache.commons.collections4.map.MultiKeyMap:360","type":"CtOperatorAssignmentImpl","sourcecode":"h ^= key1.hashCode()"},"status":-1},{"failures":[],"tindex":"739a4fbb-21ec-11e6-8c8e-d9430a2cb280","series":0,"name":"add","transplant":{"toString":"this.endIndex = endIndex","position":"org.apache.commons.collections4.iterators.ArrayIterator:93","type":"CtAssignmentImpl","sourcecode":"this.int = endIndex"},"variableMap":{"endIndex":"expectedModCount"},"type":"adrStmt","transplantationPoint":{"toString":"(expectedModCount)++","position":"org.apache.commons.collections4.list.AbstractLinkedList:872","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"739a4fbc-21ec-11e6-8c8e-91b0601c4112","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"Set and List must be empty\")","position":"org.apache.commons.collections4.set.ListOrderedSet:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set and List must be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.SETVALUE_INVALID)","position":"org.apache.commons.collections4.map.Flat3Map:686","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)"},"status":0},{"failures":[48],"tindex":"739a4fbd-21ec-11e6-8c8e-73e3f7386d13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (list == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} ","position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtIfImpl","sourcecode":"if (list == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"739a76ce-21ec-11e6-8c8e-032e74177454","series":0,"name":"replace","transplant":{"toString":"return firstEntry().getKey()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:784","type":"CtReturnImpl","sourcecode":"return firstEntry().getKey()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return nextEntry().getKey()","position":"org.apache.commons.collections4.map.Flat3Map:1011","type":"CtReturnImpl","sourcecode":"return nextEntry().getKey()"},"status":-2},{"failures":[],"tindex":"739a76cf-21ec-11e6-8c8e-df1c0ee72df9","series":0,"name":"add","transplant":{"toString":"final boolean fromInclusive = isFromInclusive()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1804","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = isFromInclusive()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final boolean removed = valuesForKey.remove(value)","position":"org.apache.commons.collections4.map.MultiValueMap:215","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = valuesForKey.remove(value)"},"status":-2},{"failures":[],"tindex":"739a76d0-21ec-11e6-8c8e-1163bd98f6f3","series":0,"name":"replace","transplant":{"toString":"if (coll == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:55","type":"CtIfImpl","sourcecode":"if (coll == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"toString":"if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} ","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (coll instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"739a76d1-21ec-11e6-8c8e-a5dbe7d8ef31","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.UnsupportedOperationException(\"remove() method not supported for a NodeListIterator.\")","position":"org.apache.commons.collections4.iterators.NodeListIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() method not supported for a NodeListIterator.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":0},{"failures":[],"tindex":"739a76d2-21ec-11e6-8c8e-d13fcc602cb1","series":0,"name":"replace","transplant":{"toString":"return decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl","sourcecode":"return decorated().isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"while (it.hasNext()) {\n    final java.lang.Object key = it.next();\n    final java.lang.Object value = it.getValue();\n    if (value == null) {\n        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n            return false;\n        } \n    } else {\n        if ((value.equals(map.get(key))) == false) {\n            return false;\n        } \n    }\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (it.hasNext()) {\n    final java.lang.Object java.lang.Object = it.next();\n    final java.lang.Object java.lang.Object = it.getValue();\n    if (value == null) {\n        if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n            return false;\n        } \n    } else {\n        if ((value.equals(map.get(key))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"739a9de3-21ec-11e6-8c8e-535c7a18155a","series":0,"name":"replace","transplant":{"toString":"first = false","position":"org.apache.commons.collections4.map.ListOrderedMap:369","type":"CtAssignmentImpl","sourcecode":"first = false"},"variableMap":{"first":"leftIsPrevious"},"type":"adrStmt","transplantationPoint":{"toString":"leftIsPrevious = true","position":"org.apache.commons.collections4.list.TreeList:377","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"739c4b94-21ec-11e6-8c8e-31a619c8ae88","series":0,"name":"replace","transplant":{"toString":"if ((lastUsedIterator) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"toString":"if (iterator == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (iterator == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-3},{"failures":[],"tindex":"739c72a5-21ec-11e6-8c8e-5725003d3da6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-2},{"failures":[],"tindex":"739c72a6-21ec-11e6-8c8e-8d4babaef487","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.list = list","position":"org.apache.commons.collections4.iterators.LoopingListIterator:61","type":"CtAssignmentImpl","sourcecode":"this.java.util.List<E> = list"},"status":-2},{"failures":[],"tindex":"739c72a7-21ec-11e6-8c8e-8b2e2e55de0e","series":0,"name":"add","transplant":{"toString":"findConstructor()","position":"org.apache.commons.collections4.functors.InstantiateFactory:84","type":"CtInvocationImpl","sourcecode":"findConstructor()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (final O element : b) {\n    if (p.evaluate(element)) {\n        bag.add(element);\n    } \n}","position":"org.apache.commons.collections4.CollectionUtils:331","type":"CtForEachImpl","sourcecode":"for (final O O : b) {\n    if (p.evaluate(element)) {\n        bag.add(element);\n    } \n}"},"status":-2},{"failures":[78,79,80,81,82,83,84,85],"tindex":"739c72a8-21ec-11e6-8c8e-b1498674de01","series":0,"name":"add","transplant":{"toString":"iterator = list.listIterator(list.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:57","type":"CtAssignmentImpl","sourcecode":"java.util.ListIterator<E> = list.listIterator(list.size())"},"variableMap":{"iterator":"iterator","list":"list"},"type":"adrStmt","transplantationPoint":{"toString":"iterator = list.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl","sourcecode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()"},"status":-1},{"failures":[],"tindex":"739c72a9-21ec-11e6-8c8e-3f52161d0a66","series":0,"name":"replace","transplant":{"toString":"if ((size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if ((size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (obj instanceof java.util.Enumeration) {\n    return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n} ","position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtIfImpl","sourcecode":"if (obj instanceof java.util.Enumeration) {\n    return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(obj)));\n} "},"status":-2},{"failures":[],"tindex":"739c72aa-21ec-11e6-8c8e-95ee1bb66e0b","series":0,"name":"replace","transplant":{"toString":"initialCapacity = calculateNewCapacity(initialCapacity)","position":"org.apache.commons.collections4.map.AbstractHashedMap:148","type":"CtAssignmentImpl","sourcecode":"initialCapacity = calculateNewCapacity(initialCapacity)"},"variableMap":{"initialCapacity":"i"},"type":"adrStmt","transplantationPoint":{"toString":"i++","position":"org.apache.commons.collections4.CollectionUtils:1447","type":"CtUnaryOperatorImpl","sourcecode":"i++"},"status":-2},{"failures":[],"tindex":"739c72ab-21ec-11e6-8c8e-c72c29773a59","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.collections4.list.TreeList.AVLNode.this.relativePosition = relativePosition","position":"org.apache.commons.collections4.list.TreeList:331","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode.this.int = relativePosition"},"variableMap":{"relativePosition":"h"},"type":"adrStmt","transplantationPoint":{"toString":"h ^= key1.hashCode()","position":"org.apache.commons.collections4.map.MultiKeyMap:504","type":"CtOperatorAssignmentImpl","sourcecode":"h ^= key1.hashCode()"},"status":-2},{"failures":[],"tindex":"739e476c-21ec-11e6-8c8e-8b1cdad23472","series":0,"name":"replace","transplant":{"toString":"fill()","position":"org.apache.commons.collections4.iterators.PeekingIterator:128","type":"CtInvocationImpl","sourcecode":"fill()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"while (true) {\n    final int cmp = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(newNode.getValue(), node.getValue());\n    if (cmp == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (newNode.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE))) + \"\\\") in this Map\"));\n    } else if (cmp < 0) {\n        if ((node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE)) != null) {\n            node = node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE);\n        } else {\n            node.setLeft(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE);\n            newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE);\n            doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE);\n            break;\n        }\n    } else {\n        if ((node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE)) != null) {\n            node = node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE);\n        } else {\n            node.setRight(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE);\n            newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE);\n            doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE);\n            break;\n        }\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap.compare(newNode.getValue(), node.getValue());\n    if (cmp == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (newNode.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (cmp < 0) {\n        if ((node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            node = node.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            node.setLeft(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            node = node.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            node.setRight(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            newNode.setParent(node, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            doRedBlackInsert(newNode, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"739e476d-21ec-11e6-8c8e-edc13e326c99","series":0,"name":"replace","transplant":{"toString":"final int leastIndex = least()","position":"org.apache.commons.collections4.iterators.CollatingIterator:251","type":"CtLocalVariableImpl","sourcecode":"final int int = least()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int index = insertOrder.indexOf(key)","position":"org.apache.commons.collections4.map.ListOrderedMap:194","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.List<K>.indexOf(key)"},"status":-2},{"failures":[],"tindex":"739e476e-21ec-11e6-8c8e-43947c9f5fab","series":0,"name":"replace","transplant":{"toString":"return decorated().retainAll(null)","position":"org.apache.commons.collections4.bag.CollectionBag:154","type":"CtReturnImpl","sourcecode":"return decorated().retainAll(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return iterator.hasNext()","position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends I>.hasNext()"},"status":-2},{"failures":[],"tindex":"739e6e7f-21ec-11e6-8c8e-e3bc9a0768e0","series":0,"name":"replace","transplant":{"toString":"return nextEntry(firstEntry())","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return nextEntry(firstEntry())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:255","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[86],"tindex":"739e6e80-21ec-11e6-8c8e-dbe410fa782b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"doRemoveValue(value)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:487","type":"CtInvocationImpl","sourcecode":"doRemoveValue(value)"},"status":-1},{"failures":[],"tindex":"739e6e81-21ec-11e6-8c8e-cbfa8503dc0d","series":0,"name":"replace","transplant":{"toString":"this.entry = entry","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2302","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"path.left = entry","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:221","type":"CtAssignmentImpl","sourcecode":"path.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = entry"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":33,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}